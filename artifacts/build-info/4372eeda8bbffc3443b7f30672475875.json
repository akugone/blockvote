{
	"id": "4372eeda8bbffc3443b7f30672475875",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"votingSystem.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.14;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\n\r\ncontract Voting is Ownable {\r\n\r\n    uint winningProposalId;\r\n\r\n    struct Voter {\r\n        bool isRegistered;\r\n        bool hasVoted;\r\n        uint256 votedProposalId;\r\n    }\r\n\r\n    struct Proposal {\r\n        string description;\r\n        uint256 voteCount;\r\n    }\r\n\r\n    enum WorkflowStatus {\r\n        RegisteringVoters,\r\n        ProposalsRegistrationStarted,\r\n        ProposalsRegistrationEnded,\r\n        VotingSessionStarted,\r\n        VotingSessionEnded,\r\n        VotesTallied\r\n    }\r\n\r\n    event VoterRegistered(address voterAddress);\r\n    event WorkflowStatusChange(\r\n        WorkflowStatus previousStatus,\r\n        WorkflowStatus newStatus\r\n    );\r\n    event ProposalRegistered(uint256 proposalId);\r\n    event Voted(address voter, uint256 proposalId);\r\n\r\n    mapping(address => Voter) public voters;\r\n\r\n\r\n    function addWhitelist() public onlyOwner {\r\n        \r\n    }\r\n\r\n\r\n    function getWinner() public view returns(uint){\r\n        return winningProposalId;\r\n        \r\n    }\r\n\r\n    \r\n    \r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9ceac6c134cbbeac2d7c1e004f633bf1fefbb153038fe14528f333d0b274ec19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b739378e58a7da6997c3b91884abd66cc2f56e57fc3987c64250e19b5905d\",\"dweb:/ipfs/QmNYoiy86D7SLeNLzmuGdBMKKTK9cmsrAuxYVRxKHi9Ans\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"votingSystem.sol": {
				"Voting": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ProposalRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voterAddress",
									"type": "address"
								}
							],
							"name": "VoterRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum Voting.WorkflowStatus",
									"name": "previousStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "enum Voting.WorkflowStatus",
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "WorkflowStatusChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWinner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isRegistered",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "hasVoted",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "votedProposalId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"votingSystem.sol\":177:1176  contract Voting is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"votingSystem.sol\":177:1176  contract Voting is Ownable {... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2418:2605  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2491:2507  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2510:2516  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2491:2516  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2535:2543  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2526:2532  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2526:2543  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2589:2597  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2558:2598  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2579:2587  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2558:2598  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2481:2605  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2418:2605  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"votingSystem.sol\":177:1176  contract Voting is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"votingSystem.sol\":177:1176  contract Voting is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8e7ea5b2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x979396e1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1816:1917  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1186:1271  function owner() public view virtual returns (address) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"votingSystem.sol\":1060:1159  function getWinner() public view returns(uint){... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"votingSystem.sol\":991:1050  function addWhitelist() public onlyOwner {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"votingSystem.sol\":941:980  mapping(address => Voter) public voters */\n    tag_7:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2066:2264  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1816:1917  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1092  _checkOwner() */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1090  _checkOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1092  _checkOwner() */\n      jump\t// in\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1880:1910  _transferOwnership(address(0)) */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1907:1908  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1880:1898  _transferOwnership */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1880:1910  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1816:1917  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1186:1271  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1232:1239  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1258:1264  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1251:1264  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1186:1271  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"votingSystem.sol\":1060:1159  function getWinner() public view returns(uint){... */\n    tag_16:\n        /* \"votingSystem.sol\":1101:1105  uint */\n      0x00\n        /* \"votingSystem.sol\":1124:1141  winningProposalId */\n      sload(0x01)\n        /* \"votingSystem.sol\":1117:1141  return winningProposalId */\n      swap1\n      pop\n        /* \"votingSystem.sol\":1060:1159  function getWinner() public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"votingSystem.sol\":991:1050  function addWhitelist() public onlyOwner {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1092  _checkOwner() */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1090  _checkOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1092  _checkOwner() */\n      jump\t// in\n    tag_39:\n        /* \"votingSystem.sol\":991:1050  function addWhitelist() public onlyOwner {... */\n      jump\t// out\n        /* \"votingSystem.sol\":941:980  mapping(address => Voter) public voters */\n    tag_24:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2066:2264  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1092  _checkOwner() */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1090  _checkOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1079:1092  _checkOwner() */\n      jump\t// in\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2174:2175  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2154:2176  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2154:2162  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2154:2176  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2146:2219  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2229:2257  _transferOwnership(newOwner) */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2248:2256  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2229:2247  _transferOwnership */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2229:2257  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2066:2264  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1344:1474  function _checkOwner() internal view virtual {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1418:1430  _msgSender() */\n      tag_49\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1418:1428  _msgSender */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1418:1430  _msgSender() */\n      jump\t// in\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1407:1430  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1407:1414  owner() */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1407:1412  owner */\n      tag_12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1407:1414  owner() */\n      jump\t// in\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1407:1430  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1399:1467  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1344:1474  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2418:2605  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2491:2507  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2510:2516  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2491:2516  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2535:2543  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2526:2532  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2526:2543  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2589:2597  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2558:2598  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2579:2587  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2558:2598  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2481:2605  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2418:2605  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_57:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_58:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_77\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_59:\n        /* \"#utility.yul\":328:352   */\n      tag_79\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_58\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_81\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_59\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_60:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_61:\n        /* \"#utility.yul\":763:787   */\n      tag_84\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_60\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_18:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_86\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_61\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_63:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_65:\n        /* \"#utility.yul\":1428:1452   */\n      tag_91\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_58\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_92:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_66:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_94\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_65\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_23:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_97\n      tag_63\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1704:1823   */\n    tag_96:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_98\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_66\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2053   */\n    tag_67:\n        /* \"#utility.yul\":1997:2004   */\n      0x00\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2033:2046   */\n      iszero\n        /* \"#utility.yul\":2026:2047   */\n      iszero\n        /* \"#utility.yul\":2015:2047   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2168   */\n    tag_68:\n        /* \"#utility.yul\":2140:2161   */\n      tag_101\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2140:2161   */\n      tag_67\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2135:2138   */\n      dup3\n        /* \"#utility.yul\":2128:2162   */\n      mstore\n        /* \"#utility.yul\":2059:2168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2592   */\n    tag_26:\n        /* \"#utility.yul\":2311:2315   */\n      0x00\n        /* \"#utility.yul\":2349:2351   */\n      0x60\n        /* \"#utility.yul\":2338:2347   */\n      dup3\n        /* \"#utility.yul\":2334:2352   */\n      add\n        /* \"#utility.yul\":2326:2352   */\n      swap1\n      pop\n        /* \"#utility.yul\":2362:2427   */\n      tag_103\n        /* \"#utility.yul\":2424:2425   */\n      0x00\n        /* \"#utility.yul\":2413:2422   */\n      dup4\n        /* \"#utility.yul\":2409:2426   */\n      add\n        /* \"#utility.yul\":2400:2406   */\n      dup7\n        /* \"#utility.yul\":2362:2427   */\n      tag_68\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2437:2503   */\n      tag_104\n        /* \"#utility.yul\":2499:2501   */\n      0x20\n        /* \"#utility.yul\":2488:2497   */\n      dup4\n        /* \"#utility.yul\":2484:2502   */\n      add\n        /* \"#utility.yul\":2475:2481   */\n      dup6\n        /* \"#utility.yul\":2437:2503   */\n      tag_68\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2513:2585   */\n      tag_105\n        /* \"#utility.yul\":2581:2583   */\n      0x40\n        /* \"#utility.yul\":2570:2579   */\n      dup4\n        /* \"#utility.yul\":2566:2584   */\n      add\n        /* \"#utility.yul\":2557:2563   */\n      dup5\n        /* \"#utility.yul\":2513:2585   */\n      tag_61\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2174:2592   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2598:2767   */\n    tag_69:\n        /* \"#utility.yul\":2682:2693   */\n      0x00\n        /* \"#utility.yul\":2716:2722   */\n      dup3\n        /* \"#utility.yul\":2711:2714   */\n      dup3\n        /* \"#utility.yul\":2704:2723   */\n      mstore\n        /* \"#utility.yul\":2756:2760   */\n      0x20\n        /* \"#utility.yul\":2751:2754   */\n      dup3\n        /* \"#utility.yul\":2747:2761   */\n      add\n        /* \"#utility.yul\":2732:2761   */\n      swap1\n      pop\n        /* \"#utility.yul\":2598:2767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2773:2998   */\n    tag_70:\n        /* \"#utility.yul\":2913:2947   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2909:2910   */\n      0x00\n        /* \"#utility.yul\":2901:2907   */\n      dup3\n        /* \"#utility.yul\":2897:2911   */\n      add\n        /* \"#utility.yul\":2890:2948   */\n      mstore\n        /* \"#utility.yul\":2982:2990   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2977:2979   */\n      0x20\n        /* \"#utility.yul\":2969:2975   */\n      dup3\n        /* \"#utility.yul\":2965:2980   */\n      add\n        /* \"#utility.yul\":2958:2991   */\n      mstore\n        /* \"#utility.yul\":2773:2998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3370   */\n    tag_71:\n        /* \"#utility.yul\":3146:3149   */\n      0x00\n        /* \"#utility.yul\":3167:3234   */\n      tag_109\n        /* \"#utility.yul\":3231:3233   */\n      0x26\n        /* \"#utility.yul\":3226:3229   */\n      dup4\n        /* \"#utility.yul\":3167:3234   */\n      tag_69\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3160:3234   */\n      swap2\n      pop\n        /* \"#utility.yul\":3243:3336   */\n      tag_110\n        /* \"#utility.yul\":3332:3335   */\n      dup3\n        /* \"#utility.yul\":3243:3336   */\n      tag_70\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3361:3363   */\n      0x40\n        /* \"#utility.yul\":3356:3359   */\n      dup3\n        /* \"#utility.yul\":3352:3364   */\n      add\n        /* \"#utility.yul\":3345:3364   */\n      swap1\n      pop\n        /* \"#utility.yul\":3004:3370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3376:3795   */\n    tag_46:\n        /* \"#utility.yul\":3542:3546   */\n      0x00\n        /* \"#utility.yul\":3580:3582   */\n      0x20\n        /* \"#utility.yul\":3569:3578   */\n      dup3\n        /* \"#utility.yul\":3565:3583   */\n      add\n        /* \"#utility.yul\":3557:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3629:3638   */\n      dup2\n        /* \"#utility.yul\":3623:3627   */\n      dup2\n        /* \"#utility.yul\":3619:3639   */\n      sub\n        /* \"#utility.yul\":3615:3616   */\n      0x00\n        /* \"#utility.yul\":3604:3613   */\n      dup4\n        /* \"#utility.yul\":3600:3617   */\n      add\n        /* \"#utility.yul\":3593:3640   */\n      mstore\n        /* \"#utility.yul\":3657:3788   */\n      tag_112\n        /* \"#utility.yul\":3783:3787   */\n      dup2\n        /* \"#utility.yul\":3657:3788   */\n      tag_71\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3649:3788   */\n      swap1\n      pop\n        /* \"#utility.yul\":3376:3795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3801:3983   */\n    tag_72:\n        /* \"#utility.yul\":3941:3975   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3937:3938   */\n      0x00\n        /* \"#utility.yul\":3929:3935   */\n      dup3\n        /* \"#utility.yul\":3925:3939   */\n      add\n        /* \"#utility.yul\":3918:3976   */\n      mstore\n        /* \"#utility.yul\":3801:3983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3989:4355   */\n    tag_73:\n        /* \"#utility.yul\":4131:4134   */\n      0x00\n        /* \"#utility.yul\":4152:4219   */\n      tag_115\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4211:4214   */\n      dup4\n        /* \"#utility.yul\":4152:4219   */\n      tag_69\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4145:4219   */\n      swap2\n      pop\n        /* \"#utility.yul\":4228:4321   */\n      tag_116\n        /* \"#utility.yul\":4317:4320   */\n      dup3\n        /* \"#utility.yul\":4228:4321   */\n      tag_72\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4344   */\n      dup3\n        /* \"#utility.yul\":4337:4349   */\n      add\n        /* \"#utility.yul\":4330:4349   */\n      swap1\n      pop\n        /* \"#utility.yul\":3989:4355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4780   */\n    tag_54:\n        /* \"#utility.yul\":4527:4531   */\n      0x00\n        /* \"#utility.yul\":4565:4567   */\n      0x20\n        /* \"#utility.yul\":4554:4563   */\n      dup3\n        /* \"#utility.yul\":4550:4568   */\n      add\n        /* \"#utility.yul\":4542:4568   */\n      swap1\n      pop\n        /* \"#utility.yul\":4614:4623   */\n      dup2\n        /* \"#utility.yul\":4608:4612   */\n      dup2\n        /* \"#utility.yul\":4604:4624   */\n      sub\n        /* \"#utility.yul\":4600:4601   */\n      0x00\n        /* \"#utility.yul\":4589:4598   */\n      dup4\n        /* \"#utility.yul\":4585:4602   */\n      add\n        /* \"#utility.yul\":4578:4625   */\n      mstore\n        /* \"#utility.yul\":4642:4773   */\n      tag_118\n        /* \"#utility.yul\":4768:4772   */\n      dup2\n        /* \"#utility.yul\":4642:4773   */\n      tag_73\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4634:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4361:4780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209a5f0bb44b75ff70e0b2d1c9de944fb0542c26c5e5d3c4ea22354fa1243e860264736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 50,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6105ec8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b146100715780638e7ea5b21461008f578063979396e1146100ad578063a3ec138d146100b7578063f2fde38b146100e9575b600080fd5b61006f610105565b005b610079610119565b60405161008691906103a8565b60405180910390f35b610097610142565b6040516100a491906103dc565b60405180910390f35b6100b561014c565b005b6100d160048036038101906100cc9190610428565b610156565b6040516100e093929190610470565b60405180910390f35b61010360048036038101906100fe9190610428565b61019a565b005b61010d61021d565b610117600061029b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b61015461021d565b565b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154905083565b6101a261021d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610211576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102089061052a565b60405180910390fd5b61021a8161029b565b50565b61022561035f565b73ffffffffffffffffffffffffffffffffffffffff16610243610119565b73ffffffffffffffffffffffffffffffffffffffff1614610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610596565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039282610367565b9050919050565b6103a281610387565b82525050565b60006020820190506103bd6000830184610399565b92915050565b6000819050919050565b6103d6816103c3565b82525050565b60006020820190506103f160008301846103cd565b92915050565b600080fd5b61040581610387565b811461041057600080fd5b50565b600081359050610422816103fc565b92915050565b60006020828403121561043e5761043d6103f7565b5b600061044c84828501610413565b91505092915050565b60008115159050919050565b61046a81610455565b82525050565b60006060820190506104856000830186610461565b6104926020830185610461565b61049f60408301846103cd565b949350505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006105146026836104a7565b915061051f826104b8565b604082019050919050565b6000602082019050818103600083015261054381610507565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105806020836104a7565b915061058b8261054a565b602082019050919050565b600060208201905081810360008301526105af81610573565b905091905056fea26469706673582212209a5f0bb44b75ff70e0b2d1c9de944fb0542c26c5e5d3c4ea22354fa1243e860264736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5EC DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x979396E1 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x21D JUMP JUMPDEST PUSH2 0x117 PUSH1 0x0 PUSH2 0x29B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x21D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21A DUP2 PUSH2 0x29B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x225 PUSH2 0x35F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x243 PUSH2 0x119 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290 SWAP1 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x392 DUP3 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A2 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x3C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x405 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP2 EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x422 DUP2 PUSH2 0x3FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH2 0x43D PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44C DUP5 DUP3 DUP6 ADD PUSH2 0x413 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46A DUP2 PUSH2 0x455 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x485 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x492 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x49F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x514 PUSH1 0x26 DUP4 PUSH2 0x4A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x51F DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x543 DUP2 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580 PUSH1 0x20 DUP4 PUSH2 0x4A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x58B DUP3 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AF DUP2 PUSH2 0x573 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x5F SIGNEXTEND 0xB4 0x4B PUSH22 0xFF70E0B2D1C9DE944FB0542C26C5E5D3C4EA22354FA1 0x24 RETURNDATACOPY DUP7 MUL PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "177:999:2:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;177:999:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2418:187:0:-;2491:16;2510:6;;;;;;;;;;;2491:25;;2535:8;2526:6;;:17;;;;;;;;;;;;;;;;;;2589:8;2558:40;;2579:8;2558:40;;;;;;;;;;;;2481:124;2418:187;:::o;177:999:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 541,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 863,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 667,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addWhitelist_193": {
									"entryPoint": 332,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getWinner_201": {
									"entryPoint": 322,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 281,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 261,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 410,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voters_187": {
									"entryPoint": 342,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool_t_uint256__to_t_bool_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4783:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:3",
														"type": ""
													}
												],
												"src": "593:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:3",
														"type": ""
													}
												],
												"src": "676:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:3",
														"type": ""
													}
												],
												"src": "800:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:3",
														"type": ""
													}
												],
												"src": "1028:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:3"
															},
															"nodeType": "YulIf",
															"src": "1408:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:3",
														"type": ""
													}
												],
												"src": "1355:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:3",
														"type": ""
													}
												],
												"src": "1483:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:3"
															},
															"nodeType": "YulIf",
															"src": "1704:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1675:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1687:6:3",
														"type": ""
													}
												],
												"src": "1628:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2005:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2015:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2040:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2033:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2033:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2015:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1987:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1997:7:3",
														"type": ""
													}
												],
												"src": "1963:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2118:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2135:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2155:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2140:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2128:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2128:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2106:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2113:3:3",
														"type": ""
													}
												],
												"src": "2059:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2316:276:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2326:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2338:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2349:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2326:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2400:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2413:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2424:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2362:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2362:65:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2475:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2488:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2499:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2484:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2437:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2437:66:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2437:66:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2570:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2581:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2566:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2513:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2513:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool_t_uint256__to_t_bool_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2272:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2284:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2292:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2300:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2311:4:3",
														"type": ""
													}
												],
												"src": "2174:418:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2694:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2711:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2716:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2704:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2704:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2732:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2751:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2756:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2747:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2732:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2666:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2671:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2682:11:3",
														"type": ""
													}
												],
												"src": "2598:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2879:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2901:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2909:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2897:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2897:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2913:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2890:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2890:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2969:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2982:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2958:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2871:6:3",
														"type": ""
													}
												],
												"src": "2773:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3150:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3160:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3226:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3231:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3167:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3332:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3243:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3345:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3356:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3345:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3138:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3146:3:3",
														"type": ""
													}
												],
												"src": "3004:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3557:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3569:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3557:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3615:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3600:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3623:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3629:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3619:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3619:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3593:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3649:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3783:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3657:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3649:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3527:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3542:4:3",
														"type": ""
													}
												],
												"src": "3376:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3907:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3929:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3925:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3925:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3941:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3918:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3899:6:3",
														"type": ""
													}
												],
												"src": "3801:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4135:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4145:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4211:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4152:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4145:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4317:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4228:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4228:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4330:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4341:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4337:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4330:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4123:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4131:3:3",
														"type": ""
													}
												],
												"src": "3989:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4532:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4542:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4554:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4565:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4550:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4542:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4589:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4585:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4585:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4608:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4604:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4604:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4578:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4578:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4634:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4768:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4642:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4634:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4512:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4527:4:3",
														"type": ""
													}
												],
												"src": "4361:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bool_t_uint256__to_t_bool_t_bool_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b146100715780638e7ea5b21461008f578063979396e1146100ad578063a3ec138d146100b7578063f2fde38b146100e9575b600080fd5b61006f610105565b005b610079610119565b60405161008691906103a8565b60405180910390f35b610097610142565b6040516100a491906103dc565b60405180910390f35b6100b561014c565b005b6100d160048036038101906100cc9190610428565b610156565b6040516100e093929190610470565b60405180910390f35b61010360048036038101906100fe9190610428565b61019a565b005b61010d61021d565b610117600061029b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b61015461021d565b565b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154905083565b6101a261021d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610211576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102089061052a565b60405180910390fd5b61021a8161029b565b50565b61022561035f565b73ffffffffffffffffffffffffffffffffffffffff16610243610119565b73ffffffffffffffffffffffffffffffffffffffff1614610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610596565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039282610367565b9050919050565b6103a281610387565b82525050565b60006020820190506103bd6000830184610399565b92915050565b6000819050919050565b6103d6816103c3565b82525050565b60006020820190506103f160008301846103cd565b92915050565b600080fd5b61040581610387565b811461041057600080fd5b50565b600081359050610422816103fc565b92915050565b60006020828403121561043e5761043d6103f7565b5b600061044c84828501610413565b91505092915050565b60008115159050919050565b61046a81610455565b82525050565b60006060820190506104856000830186610461565b6104926020830185610461565b61049f60408301846103cd565b949350505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006105146026836104a7565b915061051f826104b8565b604082019050919050565b6000602082019050818103600083015261054381610507565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105806020836104a7565b915061058b8261054a565b602082019050919050565b600060208201905081810360008301526105af81610573565b905091905056fea26469706673582212209a5f0bb44b75ff70e0b2d1c9de944fb0542c26c5e5d3c4ea22354fa1243e860264736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x979396E1 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x21D JUMP JUMPDEST PUSH2 0x117 PUSH1 0x0 PUSH2 0x29B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x21D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21A DUP2 PUSH2 0x29B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x225 PUSH2 0x35F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x243 PUSH2 0x119 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290 SWAP1 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x392 DUP3 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A2 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x3C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x405 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP2 EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x422 DUP2 PUSH2 0x3FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH2 0x43D PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44C DUP5 DUP3 DUP6 ADD PUSH2 0x413 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46A DUP2 PUSH2 0x455 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x485 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x492 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x49F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x514 PUSH1 0x26 DUP4 PUSH2 0x4A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x51F DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x543 DUP2 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580 PUSH1 0x20 DUP4 PUSH2 0x4A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x58B DUP3 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AF DUP2 PUSH2 0x573 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x5F SIGNEXTEND 0xB4 0x4B PUSH22 0xFF70E0B2D1C9DE944FB0542C26C5E5D3C4EA22354FA1 0x24 RETURNDATACOPY DUP7 MUL PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "177:999:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:101:0;;;:::i;:::-;;1186:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:99:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;991:59;;;:::i;:::-;;941:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2066:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1816:101;1079:13;:11;:13::i;:::-;1880:30:::1;1907:1;1880:18;:30::i;:::-;1816:101::o:0;1186:85::-;1232:7;1258:6;;;;;;;;;;;1251:13;;1186:85;:::o;1060:99:2:-;1101:4;1124:17;;1117:24;;1060:99;:::o;991:59::-;1079:13:0;:11;:13::i;:::-;991:59:2:o;941:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2066:198:0:-;1079:13;:11;:13::i;:::-;2174:1:::1;2154:22;;:8;:22;;::::0;2146:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2229:28;2248:8;2229:18;:28::i;:::-;2066:198:::0;:::o;1344:130::-;1418:12;:10;:12::i;:::-;1407:23;;:7;:5;:7::i;:::-;:23;;;1399:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1344:130::o;2418:187::-;2491:16;2510:6;;;;;;;;;;;2491:25;;2535:8;2526:6;;:17;;;;;;;;;;;;;;;;;;2589:8;2558:40;;2579:8;2558:40;;;;;;;;;;;;2481:124;2418:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:90::-;1997:7;2040:5;2033:13;2026:21;2015:32;;1963:90;;;:::o;2059:109::-;2140:21;2155:5;2140:21;:::i;:::-;2135:3;2128:34;2059:109;;:::o;2174:418::-;2311:4;2349:2;2338:9;2334:18;2326:26;;2362:65;2424:1;2413:9;2409:17;2400:6;2362:65;:::i;:::-;2437:66;2499:2;2488:9;2484:18;2475:6;2437:66;:::i;:::-;2513:72;2581:2;2570:9;2566:18;2557:6;2513:72;:::i;:::-;2174:418;;;;;;:::o;2598:169::-;2682:11;2716:6;2711:3;2704:19;2756:4;2751:3;2747:14;2732:29;;2598:169;;;;:::o;2773:225::-;2913:34;2909:1;2901:6;2897:14;2890:58;2982:8;2977:2;2969:6;2965:15;2958:33;2773:225;:::o;3004:366::-;3146:3;3167:67;3231:2;3226:3;3167:67;:::i;:::-;3160:74;;3243:93;3332:3;3243:93;:::i;:::-;3361:2;3356:3;3352:12;3345:19;;3004:366;;;:::o;3376:419::-;3542:4;3580:2;3569:9;3565:18;3557:26;;3629:9;3623:4;3619:20;3615:1;3604:9;3600:17;3593:47;3657:131;3783:4;3657:131;:::i;:::-;3649:139;;3376:419;;;:::o;3801:182::-;3941:34;3937:1;3929:6;3925:14;3918:58;3801:182;:::o;3989:366::-;4131:3;4152:67;4216:2;4211:3;4152:67;:::i;:::-;4145:74;;4228:93;4317:3;4228:93;:::i;:::-;4346:2;4341:3;4337:12;4330:19;;3989:366;;;:::o;4361:419::-;4527:4;4565:2;4554:9;4550:18;4542:26;;4614:9;4608:4;4604:20;4600:1;4589:9;4585:17;4578:47;4642:131;4768:4;4642:131;:::i;:::-;4634:139;;4361:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "303200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addWhitelist()": "2732",
								"getWinner()": "2459",
								"owner()": "2522",
								"renounceOwnership()": "30376",
								"transferOwnership(address)": "30832",
								"voters(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2605,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2418,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2491,
									"end": 2516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2491,
									"end": 2516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2535,
									"end": 2543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2532,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2526,
									"end": 2532,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2526,
									"end": 2543,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2589,
									"end": 2597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2579,
									"end": 2587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2558,
									"end": 2598,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2481,
									"end": 2605,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2418,
									"end": 2605,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2418,
									"end": 2605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1176,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a5f0bb44b75ff70e0b2d1c9de944fb0542c26c5e5d3c4ea22354fa1243e860264736f6c634300080e0033",
									".code": [
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "8E7EA5B2"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "979396E1"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "A3EC138D"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 177,
											"end": 1176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1816,
											"end": 1917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1186,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1186,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1060,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1060,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2066,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2066,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1816,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1079,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1079,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1907,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1880,
											"end": 1910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1880,
											"end": 1910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1079,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1079,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1079,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1079,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2146,
											"end": 2219,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2146,
											"end": 2219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2248,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2229,
											"end": 2257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2229,
											"end": 2257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1474,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1344,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1418,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1418,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1407,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1407,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1414,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1407,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1399,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1399,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2605,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2418,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2047,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2168,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2059,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2140,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2161,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2140,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2351,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2362,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2362,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2362,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2362,
											"end": 2427,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2362,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2497,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2437,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2503,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2437,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2513,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2585,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2513,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2767,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2598,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2760,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2754,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2767,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2767,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2998,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2773,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2947,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2909,
											"end": 2910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2897,
											"end": 2911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 2948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2965,
											"end": 2980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 2991,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3370,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3231,
											"end": 3233,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3226,
											"end": 3229,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3167,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3234,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3167,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3243,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3336,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3243,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3359,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3370,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3629,
											"end": 3638,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3619,
											"end": 3639,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3617,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3593,
											"end": 3640,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3657,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3983,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3801,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3941,
											"end": 3975,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3939,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4152,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4317,
											"end": 4320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4228,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4768,
											"end": 4772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4642,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"votingSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addWhitelist()": "979396e1",
							"getWinner()": "8e7ea5b2",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"voters(address)": "a3ec138d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"votedProposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"votingSystem.sol\":\"Voting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9ceac6c134cbbeac2d7c1e004f633bf1fefbb153038fe14528f333d0b274ec19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b739378e58a7da6997c3b91884abd66cc2f56e57fc3987c64250e19b5905d\",\"dweb:/ipfs/QmNYoiy86D7SLeNLzmuGdBMKKTK9cmsrAuxYVRxKHi9Ans\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"votingSystem.sol\":{\"keccak256\":\"0xde6739f8738d840fe08b78ad43766dbf528e3c3414493947f66cd7ce16b292cb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5670af7106e853d84ba39b06f8e58129305526dbc1594d9d4f16d1d74b2b38aa\",\"dweb:/ipfs/QmY7Lzxh7ktWYyhZcm62Pj1VWeHNVHWM8C78QWiXFEh635\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "votingSystem.sol:Voting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 141,
								"contract": "votingSystem.sol:Voting",
								"label": "winningProposalId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 187,
								"contract": "votingSystem.sol:Voting",
								"label": "voters",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Voter)148_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)148_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Voting.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)148_storage"
							},
							"t_struct(Voter)148_storage": {
								"encoding": "inplace",
								"label": "struct Voting.Voter",
								"members": [
									{
										"astId": 143,
										"contract": "votingSystem.sol:Voting",
										"label": "isRegistered",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 145,
										"contract": "votingSystem.sol:Voting",
										"label": "hasVoted",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 147,
										"contract": "votingSystem.sol:Voting",
										"label": "votedProposalId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 112,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1069:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1079:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1079:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1079:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1102:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1057:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:2:0"
									},
									"src": "1048:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1241:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1258:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1251:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1116:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1195:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:9:0"
									},
									"scope": 112,
									"src": "1186:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1389:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1407:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1407:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1418:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1418:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1407:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1432:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1399:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1277:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1353:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1389:0:0"
									},
									"scope": 112,
									"src": "1344:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1870:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1899:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1899:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1899:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1880:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1880:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1880:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1480:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1860:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1860:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1825:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1842:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:0:0"
									},
									"scope": 112,
									"src": "1816:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2136:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2154:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2174:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2166:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2166:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2166:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2154:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2248:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2229:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2229:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1923:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2126:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2126:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2075:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2101:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2093:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 112,
									"src": "2066:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2481:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2499:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2491:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2491:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2491:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2526:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2535:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2526:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2526:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2579:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2589:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2558:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2558:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2553:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2270:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2427:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2454:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2446:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2445:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:0"
									},
									"scope": 112,
									"src": "2418:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "639:1968:0",
							"usedErrors": []
						}
					],
					"src": "87:2521:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"votingSystem.sol": {
				"ast": {
					"absolutePath": "votingSystem.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						],
						"Voting": [
							202
						]
					},
					"id": 203,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 203,
							"sourceUnit": 113,
							"src": "66:105:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "196:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "196:7:2"
								}
							],
							"canonicalName": "Voting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 202,
							"linearizedBaseContracts": [
								202,
								112,
								134
							],
							"name": "Voting",
							"nameLocation": "186:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "winningProposalId",
									"nameLocation": "218:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 202,
									"src": "213:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "213:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Voting.Voter",
									"id": 148,
									"members": [
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "isRegistered",
											"nameLocation": "273:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "268:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 142,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "268:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 145,
											"mutability": "mutable",
											"name": "hasVoted",
											"nameLocation": "301:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "296:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 144,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "296:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 147,
											"mutability": "mutable",
											"name": "votedProposalId",
											"nameLocation": "328:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "320:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "320:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "251:5:2",
									"nodeType": "StructDefinition",
									"scope": 202,
									"src": "244:107:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.Proposal",
									"id": 153,
									"members": [
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "393:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 153,
											"src": "386:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 149,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "386:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "423:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 153,
											"src": "415:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 151,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "415:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "366:8:2",
									"nodeType": "StructDefinition",
									"scope": 202,
									"src": "359:81:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.WorkflowStatus",
									"id": 160,
									"members": [
										{
											"id": 154,
											"name": "RegisteringVoters",
											"nameLocation": "479:17:2",
											"nodeType": "EnumValue",
											"src": "479:17:2"
										},
										{
											"id": 155,
											"name": "ProposalsRegistrationStarted",
											"nameLocation": "507:28:2",
											"nodeType": "EnumValue",
											"src": "507:28:2"
										},
										{
											"id": 156,
											"name": "ProposalsRegistrationEnded",
											"nameLocation": "546:26:2",
											"nodeType": "EnumValue",
											"src": "546:26:2"
										},
										{
											"id": 157,
											"name": "VotingSessionStarted",
											"nameLocation": "583:20:2",
											"nodeType": "EnumValue",
											"src": "583:20:2"
										},
										{
											"id": 158,
											"name": "VotingSessionEnded",
											"nameLocation": "614:18:2",
											"nodeType": "EnumValue",
											"src": "614:18:2"
										},
										{
											"id": 159,
											"name": "VotesTallied",
											"nameLocation": "643:12:2",
											"nodeType": "EnumValue",
											"src": "643:12:2"
										}
									],
									"name": "WorkflowStatus",
									"nameLocation": "453:14:2",
									"nodeType": "EnumDefinition",
									"src": "448:214:2"
								},
								{
									"anonymous": false,
									"eventSelector": "b6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd",
									"id": 164,
									"name": "VoterRegistered",
									"nameLocation": "676:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"mutability": "mutable",
												"name": "voterAddress",
												"nameLocation": "700:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "692:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:22:2"
									},
									"src": "670:44:2"
								},
								{
									"anonymous": false,
									"eventSelector": "0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f",
									"id": 172,
									"name": "WorkflowStatusChange",
									"nameLocation": "726:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousStatus",
												"nameLocation": "772:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "757:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$160",
													"typeString": "enum Voting.WorkflowStatus"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "WorkflowStatus",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 160,
														"src": "757:14:2"
													},
													"referencedDeclaration": 160,
													"src": "757:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$160",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStatus",
												"nameLocation": "812:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$160",
													"typeString": "enum Voting.WorkflowStatus"
												},
												"typeName": {
													"id": 169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 168,
														"name": "WorkflowStatus",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 160,
														"src": "797:14:2"
													},
													"referencedDeclaration": 160,
													"src": "797:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$160",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:82:2"
									},
									"src": "720:109:2"
								},
								{
									"anonymous": false,
									"eventSelector": "92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f",
									"id": 176,
									"name": "ProposalRegistered",
									"nameLocation": "841:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "868:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "860:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:20:2"
									},
									"src": "835:45:2"
								},
								{
									"anonymous": false,
									"eventSelector": "4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca4",
									"id": 182,
									"name": "Voted",
									"nameLocation": "892:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "921:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "913:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:35:2"
									},
									"src": "886:47:2"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 187,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "974:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 202,
									"src": "941:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$148_storage_$",
										"typeString": "mapping(address => struct Voting.Voter)"
									},
									"typeName": {
										"id": 186,
										"keyType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "949:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "941:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$148_storage_$",
											"typeString": "mapping(address => struct Voting.Voter)"
										},
										"valueType": {
											"id": 185,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 184,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 148,
												"src": "960:5:2"
											},
											"referencedDeclaration": 148,
											"src": "960:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$148_storage_ptr",
												"typeString": "struct Voting.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1032:18:2",
										"statements": []
									},
									"functionSelector": "979396e1",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 189,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1022:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1022:9:2"
										}
									],
									"name": "addWhitelist",
									"nameLocation": "1000:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1012:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:0:2"
									},
									"scope": 202,
									"src": "991:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "1106:53:2",
										"statements": [
											{
												"expression": {
													"id": 198,
													"name": "winningProposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "1124:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 199,
												"nodeType": "Return",
												"src": "1117:24:2"
											}
										]
									},
									"functionSelector": "8e7ea5b2",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWinner",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1101:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1101:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1100:6:2"
									},
									"scope": 202,
									"src": "1060:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 203,
							"src": "177:999:2",
							"usedErrors": []
						}
					],
					"src": "39:1139:2"
				},
				"id": 2
			}
		}
	}
}